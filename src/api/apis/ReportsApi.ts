/* tslint:disable */
/* eslint-disable */
/**
 * FST Data Access API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: V1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import {
    NotFoundResponse,
    NotFoundResponseFromJSON,
    NotFoundResponseToJSON,
} from '../models';

/**
 * 
 */
export class ReportsApi extends runtime.BaseAPI {

    /**
     * This is a temporary thing
     * Returns inventory info for Kill Cliff
     */
    async getReportsKcinventoryRaw(): Promise<runtime.ApiResponse<Array<object>>> {
        const queryParameters: runtime.HTTPQuery = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // jwt authentication
        }

        const response = await this.request({
            path: `/reports/kc-inventory`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        });

        return new runtime.JSONApiResponse<any>(response);
    }

    /**
     * This is a temporary thing
     * Returns inventory info for Kill Cliff
     */
    async getReportsKcinventory(): Promise<Array<object>> {
        const response = await this.getReportsKcinventoryRaw();
        return await response.value();
    }

    /**
     * This is a temporary thing
     * Returns order info for Kill Cliff
     */
    async getReportsKcordersRaw(): Promise<runtime.ApiResponse<Array<object>>> {
        const queryParameters: runtime.HTTPQuery = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // jwt authentication
        }

        const response = await this.request({
            path: `/reports/kc-orders`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        });

        return new runtime.JSONApiResponse<any>(response);
    }

    /**
     * This is a temporary thing
     * Returns order info for Kill Cliff
     */
    async getReportsKcorders(): Promise<Array<object>> {
        const response = await this.getReportsKcordersRaw();
        return await response.value();
    }

    /**
     * This is a temporary thing
     * Returns SKU Activity for Kill Cliff
     */
    async getReportsKcskuactivityRaw(): Promise<runtime.ApiResponse<Array<object>>> {
        const queryParameters: runtime.HTTPQuery = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // jwt authentication
        }

        const response = await this.request({
            path: `/reports/kc-sku-activity`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        });

        return new runtime.JSONApiResponse<any>(response);
    }

    /**
     * This is a temporary thing
     * Returns SKU Activity for Kill Cliff
     */
    async getReportsKcskuactivity(): Promise<Array<object>> {
        const response = await this.getReportsKcskuactivityRaw();
        return await response.value();
    }

}
