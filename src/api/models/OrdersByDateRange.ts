/* tslint:disable */
/* eslint-disable */
/**
 * FST Data Access API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: V1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    PickupRange,
    PickupRangeFromJSON,
    PickupRangeFromJSONTyped,
    PickupRangeToJSON,
} from './';

/**
 * 
 * @export
 * @interface OrdersByDateRange
 */
export interface OrdersByDateRange {
    /**
     * 
     * @type {Array<string>}
     * @memberof OrdersByDateRange
     */
    rangeResult?: Array<string>;
    /**
     * 
     * @type {PickupRange}
     * @memberof OrdersByDateRange
     */
    pickupRange?: PickupRange;
    /**
     * 
     * @type {Array<string>}
     * @memberof OrdersByDateRange
     */
    compareResult?: Array<string>;
    /**
     * 
     * @type {PickupRange}
     * @memberof OrdersByDateRange
     */
    compareRange?: PickupRange;
}

export function OrdersByDateRangeFromJSON(json: any): OrdersByDateRange {
    return OrdersByDateRangeFromJSONTyped(json, false);
}

export function OrdersByDateRangeFromJSONTyped(json: any, ignoreDiscriminator: boolean): OrdersByDateRange {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'rangeResult': !exists(json, 'rangeResult') ? undefined : json['rangeResult'],
        'pickupRange': !exists(json, 'pickupRange') ? undefined : PickupRangeFromJSON(json['pickupRange']),
        'compareResult': !exists(json, 'compareResult') ? undefined : json['compareResult'],
        'compareRange': !exists(json, 'compareRange') ? undefined : PickupRangeFromJSON(json['compareRange']),
    };
}

export function OrdersByDateRangeToJSON(value?: OrdersByDateRange | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'rangeResult': value.rangeResult,
        'pickupRange': PickupRangeToJSON(value.pickupRange),
        'compareResult': value.compareResult,
        'compareRange': PickupRangeToJSON(value.compareRange),
    };
}


